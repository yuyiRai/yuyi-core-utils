### YamlMime:UniversalReference
items:
  - uid: yuyi-core-utils.OptionsUtils
    summary: 操作Options的工具类
    isPreview: true
    name: OptionsUtils
    fullName: OptionsUtils
    langs:
      - typeScript
    type: class
    package: yuyi-core-utils
    children:
      - yuyi-core-utils.OptionsUtils.convertValueOption
      - yuyi-core-utils.OptionsUtils.createEqualsMatcher
      - yuyi-core-utils.OptionsUtils.getCodeListByKey
      - yuyi-core-utils.OptionsUtils.getCodeListByKey_1
      - yuyi-core-utils.OptionsUtils.getOptions
      - yuyi-core-utils.OptionsUtils.getOptionsByKey
      - yuyi-core-utils.OptionsUtils.getOptionsByLabel
      - yuyi-core-utils.OptionsUtils.getOptionsByLabel_1
      - yuyi-core-utils.OptionsUtils.getOptionsByValue
      - yuyi-core-utils.OptionsUtils.getOptionsByValue_1
      - yuyi-core-utils.OptionsUtils.isLabelMatchedItem
      - yuyi-core-utils.OptionsUtils.isLabelMatchedItemByMatcher
      - yuyi-core-utils.OptionsUtils.isOptionsItemSelected
      - yuyi-core-utils.OptionsUtils.isValueMatchedItem
      - yuyi-core-utils.OptionsUtils.isValueMatchedItemByMatcher
      - yuyi-core-utils.OptionsUtils.labelsToValues
      - yuyi-core-utils.OptionsUtils.labelsToValues_1
      - yuyi-core-utils.OptionsUtils.labelToValue
      - yuyi-core-utils.OptionsUtils.optionsSelectedMatch
      - yuyi-core-utils.OptionsUtils.valuesToLabels
      - yuyi-core-utils.OptionsUtils.valuesToLabels_1
      - yuyi-core-utils.OptionsUtils.valueToLabel
  - uid: yuyi-core-utils.OptionsUtils.convertValueOption
    isPreview: true
    name: 'convertValueOption(valueList, isFull)'
    fullName: 'convertValueOption(valueList, isFull)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static convertValueOption(valueList: string[], isFull?: boolean): IOptionsUtils.Option[];'
      return:
        type:
          - 'IOptionsUtils.Option[]'
        description: ''
      parameters:
        - id: valueList
          description: ''
          type:
            - 'string[]'
        - id: isFull
          description: ''
          type:
            - boolean
  - uid: yuyi-core-utils.OptionsUtils.createEqualsMatcher
    summary: 提供匹配方法/正则/匹配项数组/其它，返回通用匹配方法
    isPreview: true
    name: createEqualsMatcher(searchKey)
    fullName: createEqualsMatcher(searchKey)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static createEqualsMatcher<K = any>(searchKey: IOptionsUtils.SearchKey<K>): IOptionsUtils.keyMatcher;'
      return:
        type:
          - IOptionsUtils.keyMatcher
        description: ''
      parameters:
        - id: searchKey
          description: ''
          type:
            - IOptionsUtils.SearchKey<K>
      typeParameters:
        - id: K
  - uid: yuyi-core-utils.OptionsUtils.getCodeListByKey
    isPreview: true
    name: getCodeListByKey(codeType)
    fullName: getCodeListByKey(codeType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static getCodeListByKey(codeType: IOptionsUtils.Option[]): IOptionsUtils.RemoteSearcher;'
      return:
        type:
          - IOptionsUtils.RemoteSearcher
        description: ''
      parameters:
        - id: codeType
          description: ''
          type:
            - 'IOptionsUtils.Option[]'
  - uid: yuyi-core-utils.OptionsUtils.getCodeListByKey_1
    isPreview: true
    name: 'getCodeListByKey(codeType, optionFactory)'
    fullName: 'getCodeListByKey(codeType, optionFactory)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        static getCodeListByKey(codeType: IOptionsUtils.OptionSearcher, optionFactory?: ArrayIterator<IKeyValueMap,
        IOptionsUtils.Option>): IOptionsUtils.RemoteSearcher;
      return:
        type:
          - IOptionsUtils.RemoteSearcher
        description: ''
      parameters:
        - id: codeType
          description: ''
          type:
            - IOptionsUtils.OptionSearcher
        - id: optionFactory
          description: ''
          type:
            - 'ArrayIterator<IKeyValueMap, IOptionsUtils.Option>'
  - uid: yuyi-core-utils.OptionsUtils.getOptions
    summary: 使用关键字从optionList中获取匹配的option
    remarks: '相关api： [IOptionsUtils.getOptions()](xref:yuyi-core-utils.OptionsUtils.getOptions)'
    isPreview: true
    name: 'getOptions(optionList, searchKey, keyMatcherFunc, findOne)'
    fullName: 'getOptions(optionList, searchKey, keyMatcherFunc, findOne)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        static getOptions<TOption = IOptionsUtils.Option, FindOne extends boolean = false, TResult = IsTrue<FindOne,
        TOption | undefined, TOption[]>>(optionList: TOption[], searchKey: IOptionsUtils.SearchKey<any>, keyMatcherFunc:
        IOptionsUtils.KeyMatcherFunc, findOne?: FindOne): TResult;
      return:
        type:
          - TResult
        description: 返回匹配的Option
      parameters:
        - id: optionList
          description: 待搜索的Options数组
          type:
            - 'TOption[]'
        - id: searchKey
          description: 查找关键字
          type:
            - IOptionsUtils.SearchKey<any>
        - id: keyMatcherFunc
          description: 匹配器
          type:
            - IOptionsUtils.KeyMatcherFunc
        - id: findOne
          description: 是否只返回第一个（默认为返回数组）
          type:
            - FindOne
      typeParameters:
        - id: TOption
          description: Option对象类型
        - id: FindOne
          description: Option关键标识符
          type:
            - 'boolean '
        - id: TResult
          description: 匹配结果
  - uid: yuyi-core-utils.OptionsUtils.getOptionsByKey
    summary: 通过Label或Value从optionList中获取匹配的option
    isPreview: true
    name: 'getOptionsByKey(optionList, searchKey, findOne)'
    fullName: 'getOptionsByKey(optionList, searchKey, findOne)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        static getOptionsByKey<T = IOptionsUtils.Option, K = string>(optionList: T[], searchKey:
        IOptionsUtils.SearchKey<K>, findOne?: boolean): T | T[] | undefined;
      return:
        type:
          - 'T | T[] | undefined'
        description: ''
      parameters:
        - id: optionList
          description: ''
          type:
            - 'T[]'
        - id: searchKey
          description: ''
          type:
            - IOptionsUtils.SearchKey<K>
        - id: findOne
          description: ''
          type:
            - boolean
      typeParameters:
        - id: T
        - id: K
  - uid: yuyi-core-utils.OptionsUtils.getOptionsByLabel
    summary: 使用关键字从optionList中获取匹配的option
    remarks: '相关api： [IOptionsUtils.getOptions()](xref:yuyi-core-utils.OptionsUtils.getOptions)'
    isPreview: true
    name: 'getOptionsByLabel(optionList, searchName)'
    fullName: 'getOptionsByLabel(optionList, searchName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        static getOptionsByLabel<T = IOptionsUtils.Option, K = string>(optionList: T[], searchName:
        IOptionsUtils.SearchKey<K>): T[];
      return:
        type:
          - 'T[]'
        description: 返回匹配的Option
      parameters:
        - id: optionList
          description: 待搜索的Options数组
          type:
            - 'T[]'
        - id: searchName
          description: label关键字
          type:
            - IOptionsUtils.SearchKey<K>
      typeParameters:
        - id: T
          description: Option对象类型
        - id: K
          description: Option关键标识符
  - uid: yuyi-core-utils.OptionsUtils.getOptionsByLabel_1
    summary: 使用关键字从optionList中获取匹配的option
    remarks: '相关api： [IOptionsUtils.getOptions()](xref:yuyi-core-utils.OptionsUtils.getOptions)'
    isPreview: true
    name: 'getOptionsByLabel(optionList, searchName, findOne)'
    fullName: 'getOptionsByLabel(optionList, searchName, findOne)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        static getOptionsByLabel<T = IOptionsUtils.Option, K = string>(optionList: T[], searchName:
        IOptionsUtils.SearchKey<K>, findOne: true): T | undefined;
      return:
        type:
          - T | undefined
        description: 返回匹配的Option
      parameters:
        - id: optionList
          description: 待搜索的Options数组
          type:
            - 'T[]'
        - id: searchName
          description: label关键字
          type:
            - IOptionsUtils.SearchKey<K>
        - id: findOne
          description: 是否只返回第一个（默认为返回数组）
          type:
            - 'true'
      typeParameters:
        - id: T
          description: Option对象类型
        - id: K
          description: Option关键标识符
  - uid: yuyi-core-utils.OptionsUtils.getOptionsByValue
    summary: 使用关键字从optionList中获取匹配的option
    remarks: '相关api： [IOptionsUtils.getOptions()](xref:yuyi-core-utils.OptionsUtils.getOptions)'
    isPreview: true
    name: 'getOptionsByValue(optionList, searchValue)'
    fullName: 'getOptionsByValue(optionList, searchValue)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        static getOptionsByValue<T = IOptionsUtils.Option, K = string>(optionList: T[], searchValue:
        IOptionsUtils.SearchKey<K>): T[];
      return:
        type:
          - 'T[]'
        description: 返回匹配的Option
      parameters:
        - id: optionList
          description: 待搜索的Options数组
          type:
            - 'T[]'
        - id: searchValue
          description: value关键字
          type:
            - IOptionsUtils.SearchKey<K>
      typeParameters:
        - id: T
          description: Option对象类型
        - id: K
          description: Option关键标识符
  - uid: yuyi-core-utils.OptionsUtils.getOptionsByValue_1
    summary: 使用关键字从optionList中获取匹配的option
    remarks: '相关api： [IOptionsUtils.getOptions()](xref:yuyi-core-utils.OptionsUtils.getOptions)'
    isPreview: true
    name: 'getOptionsByValue(optionList, searchValue, findOne)'
    fullName: 'getOptionsByValue(optionList, searchValue, findOne)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        static getOptionsByValue<T = IOptionsUtils.Option, K = string>(optionList: T[], searchValue:
        IOptionsUtils.SearchKey<K>, findOne: true): T | undefined;
      return:
        type:
          - T | undefined
        description: 返回匹配的Option
      parameters:
        - id: optionList
          description: 待搜索的Options数组
          type:
            - 'T[]'
        - id: searchValue
          description: value关键字
          type:
            - IOptionsUtils.SearchKey<K>
        - id: findOne
          description: 是否只返回第一个（默认为返回数组）
          type:
            - 'true'
      typeParameters:
        - id: T
          description: Option对象类型
        - id: K
          description: Option关键标识符
  - uid: yuyi-core-utils.OptionsUtils.isLabelMatchedItem
    isPreview: true
    name: 'isLabelMatchedItem(labelSearcher, item)'
    fullName: 'isLabelMatchedItem(labelSearcher, item)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static isLabelMatchedItem(labelSearcher: IOptionsUtils.SearchKey<string>, item: IOptionsUtils.Option): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: labelSearcher
          description: ''
          type:
            - IOptionsUtils.SearchKey<string>
        - id: item
          description: ''
          type:
            - yuyi-core-utils.IOptionsUtils.Option
  - uid: yuyi-core-utils.OptionsUtils.isLabelMatchedItemByMatcher
    summary: ttttttt
    isPreview: true
    name: 'isLabelMatchedItemByMatcher(keyMatcher, item)'
    fullName: 'isLabelMatchedItemByMatcher(keyMatcher, item)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static isLabelMatchedItemByMatcher(keyMatcher: IOptionsUtils.keyMatcher, item: IOptionsUtils.Option): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: keyMatcher
          description: ''
          type:
            - IOptionsUtils.keyMatcher
        - id: item
          description: ''
          type:
            - yuyi-core-utils.IOptionsUtils.Option
  - uid: yuyi-core-utils.OptionsUtils.isOptionsItemSelected
    summary: 判断是否选择项
    isPreview: true
    name: 'isOptionsItemSelected(option, searchName, selectedValue)'
    fullName: 'isOptionsItemSelected(option, searchName, selectedValue)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        static isOptionsItemSelected<T, K>(option: T[], searchName: IOptionsUtils.SearchKey<K>, selectedValue:
        IOptionsUtils.SearchKey<K>): boolean;
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'T[]'
        - id: searchName
          description: ''
          type:
            - IOptionsUtils.SearchKey<K>
        - id: selectedValue
          description: ''
          type:
            - IOptionsUtils.SearchKey<K>
      typeParameters:
        - id: T
        - id: K
  - uid: yuyi-core-utils.OptionsUtils.isValueMatchedItem
    isPreview: true
    name: 'isValueMatchedItem(valueSearcher, item)'
    fullName: 'isValueMatchedItem(valueSearcher, item)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static isValueMatchedItem(valueSearcher: IOptionsUtils.SearchKey<string>, item: IOptionsUtils.Option): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: valueSearcher
          description: ''
          type:
            - IOptionsUtils.SearchKey<string>
        - id: item
          description: ''
          type:
            - yuyi-core-utils.IOptionsUtils.Option
  - uid: yuyi-core-utils.OptionsUtils.isValueMatchedItemByMatcher
    summary: ttttttt
    isPreview: true
    name: 'isValueMatchedItemByMatcher(keyMatcher, item)'
    fullName: 'isValueMatchedItemByMatcher(keyMatcher, item)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static isValueMatchedItemByMatcher(keyMatcher: IOptionsUtils.keyMatcher, item: IOptionsUtils.Option): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: keyMatcher
          description: ''
          type:
            - IOptionsUtils.keyMatcher
        - id: item
          description: ''
          type:
            - yuyi-core-utils.IOptionsUtils.Option
  - uid: yuyi-core-utils.OptionsUtils.labelsToValues
    isPreview: true
    name: 'labelsToValues(options, label)'
    fullName: 'labelsToValues(options, label)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static labelsToValues(options: IOptionsUtils.Option[], label: IOptionsUtils.SearchKey<string>): string[];'
      return:
        type:
          - 'string[]'
        description: ''
      parameters:
        - id: options
          description: ''
          type:
            - 'IOptionsUtils.Option[]'
        - id: label
          description: ''
          type:
            - IOptionsUtils.SearchKey<string>
  - uid: yuyi-core-utils.OptionsUtils.labelsToValues_1
    isPreview: true
    name: 'labelsToValues(options, label, joinKey)'
    fullName: 'labelsToValues(options, label, joinKey)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        static labelsToValues(options: IOptionsUtils.Option[], label: IOptionsUtils.SearchKey<string>, joinKey: string):
        string;
      return:
        type:
          - string
        description: ''
      parameters:
        - id: options
          description: ''
          type:
            - 'IOptionsUtils.Option[]'
        - id: label
          description: ''
          type:
            - IOptionsUtils.SearchKey<string>
        - id: joinKey
          description: ''
          type:
            - string
  - uid: yuyi-core-utils.OptionsUtils.labelToValue
    isPreview: true
    name: 'labelToValue(optionList, label)'
    fullName: 'labelToValue(optionList, label)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        static labelToValue(optionList: IOptionsUtils.Option[], label: IOptionsUtils.SearchKey<string>): string |
        undefined;
      return:
        type:
          - string | undefined
        description: ''
      parameters:
        - id: optionList
          description: ''
          type:
            - 'IOptionsUtils.Option[]'
        - id: label
          description: ''
          type:
            - IOptionsUtils.SearchKey<string>
  - uid: yuyi-core-utils.OptionsUtils.optionsSelectedMatch
    isPreview: true
    name: 'optionsSelectedMatch(option, searchName)'
    fullName: 'optionsSelectedMatch(option, searchName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        static optionsSelectedMatch<T, K>(option: T[], searchName: IOptionsUtils.SearchKey<K>):
        IOptionsUtils.keyMatcher;
      return:
        type:
          - IOptionsUtils.keyMatcher
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'T[]'
        - id: searchName
          description: ''
          type:
            - IOptionsUtils.SearchKey<K>
      typeParameters:
        - id: T
        - id: K
  - uid: yuyi-core-utils.OptionsUtils.valuesToLabels
    isPreview: true
    name: 'valuesToLabels(options, value)'
    fullName: 'valuesToLabels(options, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'static valuesToLabels(options: IOptionsUtils.Option[], value: IOptionsUtils.SearchKey<string>): string[];'
      return:
        type:
          - 'string[]'
        description: ''
      parameters:
        - id: options
          description: ''
          type:
            - 'IOptionsUtils.Option[]'
        - id: value
          description: ''
          type:
            - IOptionsUtils.SearchKey<string>
  - uid: yuyi-core-utils.OptionsUtils.valuesToLabels_1
    isPreview: true
    name: 'valuesToLabels(options, value, joinKey)'
    fullName: 'valuesToLabels(options, value, joinKey)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        static valuesToLabels(options: IOptionsUtils.Option[], value: IOptionsUtils.SearchKey<string>, joinKey: string):
        string;
      return:
        type:
          - string
        description: ''
      parameters:
        - id: options
          description: ''
          type:
            - 'IOptionsUtils.Option[]'
        - id: value
          description: ''
          type:
            - IOptionsUtils.SearchKey<string>
        - id: joinKey
          description: ''
          type:
            - string
  - uid: yuyi-core-utils.OptionsUtils.valueToLabel
    isPreview: true
    name: 'valueToLabel(optionList, value)'
    fullName: 'valueToLabel(optionList, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        static valueToLabel(optionList: IOptionsUtils.Option[], value: IOptionsUtils.SearchKey<string>): string |
        undefined;
      return:
        type:
          - string | undefined
        description: ''
      parameters:
        - id: optionList
          description: ''
          type:
            - 'IOptionsUtils.Option[]'
        - id: value
          description: ''
          type:
            - IOptionsUtils.SearchKey<string>
